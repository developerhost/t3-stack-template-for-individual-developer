name: Bun🥟 CI

on: pull_request

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache 💾
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('bun.lockb','package.json','prisma/schema.prisma') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('bun.lockb','package.json','prisma/schema.prisma') }}
        # cacheがヒットしなかった場合のみ、bun installとprisma generateを実行する
      - if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        name: Setup Bun 🥟
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        name: Install dependencies 📦
        run: bun install
      - if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        name: Run prisma generate 🏭
        # erd generatorが動作しないよう該当行を削除してから実行
        run: sed -i '11,13d' prisma/schema.prisma && bun run prisma generate

  # lintとtestを並列で実行する
  lint:
    runs-on: ubuntu-latest
    needs: setup
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache 💾
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('bun.lockb','package.json','prisma/schema.prisma') }}
          restore-keys: |
            ${{ runner.os }}-build--${{ hashFiles('bun.lockb','package.json','prisma/schema.prisma') }}

      - name: Setup Bun 🥟
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: debug 環境変数の確認 🐛
        run: |
          echo "DATABASE_URL is ${DATABASE_URL:+セットされています}"
          echo "DIRECT_URL is ${DIRECT_URL:+セットされています}"
          echo "NEXTAUTH_SECRET is ${NEXTAUTH_SECRET:+セットされています}"
          echo "NEXTAUTH_URL is ${NEXTAUTH_URL:+セットされています}"
          echo "GOOGLE_CLIENT_ID is ${GOOGLE_CLIENT_ID:+セットされています}"
          echo "GOOGLE_CLIENT_SECRET is ${GOOGLE_CLIENT_SECRET:+セットされています}"

      - name: Run lint 🧹
        run: bun run lint

  test:
    runs-on: ubuntu-latest
    needs: setup
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache 💾
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('bun.lockb','package.json','prisma/schema.prisma') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('bun.lockb','package.json','prisma/schema.prisma') }}

      - name: Setup Bun 🥟
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: debug 環境変数の確認 🐛
        run: |
          echo "DATABASE_URL is ${DATABASE_URL:+セットされています}"
          echo "DIRECT_URL is ${DIRECT_URL:+セットされています}"
          echo "NEXTAUTH_SECRET is ${NEXTAUTH_SECRET:+セットされています}"
          echo "NEXTAUTH_URL is ${NEXTAUTH_URL:+セットされています}"
          echo "GOOGLE_CLIENT_ID is ${GOOGLE_CLIENT_ID:+セットされています}"
          echo "GOOGLE_CLIENT_SECRET is ${GOOGLE_CLIENT_SECRET:+セットされています}"

      - name: Run test 🧪
        run: bun run test
